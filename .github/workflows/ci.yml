name: Test, Build, and Release
on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:
  workflow_dispatch:

jobs:
  pre_job:
    permissions:
      actions: write
      contents: read
    name: Duplicate Actions Detection
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ !startsWith(github.ref, 'refs/tags/') && steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          cancel_others: "true"

  test:
    needs: [pre_job]
    if: needs.pre_job.outputs.should_skip != 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Nushell
        uses: hustcer/setup-nu@v3

      - name: Install tools
        uses: taiki-e/install-action@v2
        with:
          tool: just,tinymist

      - name: Run test suite
        run: just test

  build:
    needs: [pre_job]
    if: needs.pre_job.outputs.should_skip != 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Nushell
        uses: hustcer/setup-nu@v3

      - name: Install tools
        uses: taiki-e/install-action@v2
        with:
          tool: just,typlite

      - name: Setup typst
        uses: typst-community/setup-typst@v3

      - name: Install fonts
        run: |
          git fetch origin assets:assets
          git checkout assets -- assets/fonts
          sudo mkdir -p /usr/share/fonts/truetype/custom
          sudo cp assets/fonts/*.ttf /usr/share/fonts/truetype/custom/ || true
          sudo fc-cache -fv

      - name: Build package
        run: just package

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ourchat
          path: out/

  release:
    runs-on: ubuntu-latest
    needs: [test, build]
    if: success() && startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Display structure of downloaded files
        run: ls -R artifacts

      - name: Extract release notes
        env:
          # github.ref_name is just the tag (without the "refs/tags/" prefix)
          VERSION: ${{ github.ref_name }}
        run: |
          # grab from "## v0.y.z[-suffix] â€“ YYYY-MM-DD" until the next "## "  and drop the header
          sed -En "/## ${VERSION}(-[[:alnum:]]+)? -/,/## /p" CHANGELOG.md | sed '1d;$d' > release_notes.md

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "artifacts/*/*"
          allowUpdates: true
          omitBodyDuringUpdate: true
          omitDraftDuringUpdate: true
          omitNameDuringUpdate: true
          omitPrereleaseDuringUpdate: true
          bodyFile: "release_notes.md"
